

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Feb 07 11:09:58 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22  0000                     
    23                           ; Version 2.36
    24                           ; Generated 28/01/2022 GMT
    25                           ; 
    26                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F452 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     
    59                           	psect	smallconst
    60  000600                     __psmallconst:
    61                           	callstack 0
    62  000600  00                 	db	0
    63  000601  04                 	db	4
    64  000602                     __end_of_OSC_FREQ:
    65                           	callstack 0
    66  0000                     _RCREG	set	4014
    67  0000                     _TXREG	set	4013
    68  0000                     _IPR1	set	3999
    69  0000                     _INTCON2	set	4081
    70  0000                     _PIR1	set	3998
    71  0000                     _PIE2	set	4000
    72  000602                     STR_1:
    73  000602  49                 	db	73	;'I'
    74  000603  6E                 	db	110	;'n'
    75  000604  69                 	db	105	;'i'
    76  000605  74                 	db	116	;'t'
    77  000606  69                 	db	105	;'i'
    78  000607  61                 	db	97	;'a'
    79  000608  6C                 	db	108	;'l'
    80  000609  69                 	db	105	;'i'
    81  00060A  7A                 	db	122	;'z'
    82  00060B  61                 	db	97	;'a'
    83  00060C  74                 	db	116	;'t'
    84  00060D  69                 	db	105	;'i'
    85  00060E  6F                 	db	111	;'o'
    86  00060F  6E                 	db	110	;'n'
    87  000610  2E                 	db	46
    88  000611  2E                 	db	46
    89  000612  2E                 	db	46
    90  000613  00                 	db	0
    91  000614  00                 	db	0	; dummy byte at the end
    92  0000                     
    93                           	psect	nvCOMRAM
    94  000019                     __pnvCOMRAM:
    95                           	callstack 0
    96  000019                     _val:
    97                           	callstack 0
    98  000019                     	ds	2
    99  0000                     _TMR0IE	set	32661
   100  0000                     _TMR0IF	set	32658
   101  0000                     _RCIF	set	31989
   102  0000                     _CREN	set	32092
   103  0000                     _OERR	set	32089
   104  0000                     _TRMT	set	32097
   105  0000                     _BRGH	set	32098
   106  0000                     _SYNC	set	32100
   107  0000                     _PIE1	set	3997
   108  0000                     _INTCON3	set	4080
   109  0000                     _INTCON	set	4082
   110  0000                     _RCSTA	set	4011
   111  0000                     _TXSTA	set	4012
   112  0000                     _SPBRG	set	4015
   113  0000                     _IPR2	set	4002
   114  0000                     _PIR2	set	4001
   115  0000                     _T0CON	set	4053
   116  0000                     _TMR0	set	4054
   117                           
   118                           ; #config settings
   119                           
   120                           	psect	cinit
   121  000760                     __pcinit:
   122                           	callstack 0
   123  000760                     start_initialization:
   124                           	callstack 0
   125  000760                     __initialization:
   126                           	callstack 0
   127                           
   128                           ; Clear objects allocated to COMRAM (8 bytes)
   129  000760  EE00  F011         	lfsr	0,__pbssCOMRAM
   130  000764  0E08               	movlw	8
   131  000766                     clear_0:
   132  000766  6AEE               	clrf	postinc0,c
   133  000768  06E8               	decf	wreg,f,c
   134  00076A  E1FD               	bnz	clear_0
   135  00076C                     end_of_initialization:
   136                           	callstack 0
   137  00076C                     __end_of__initialization:
   138                           	callstack 0
   139  00076C  901B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   140  00076E  921B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   141  000770  0E00               	movlw	low (__Lmediumconst shr (0+16))
   142  000772  6EF8               	movwf	tblptru,c
   143  000774  0100               	movlb	0
   144  000776  EF44  F003         	goto	_main	;jump to C main() function
   145                           
   146                           	psect	bssCOMRAM
   147  000011                     __pbssCOMRAM:
   148                           	callstack 0
   149  000011                     _IncVar:
   150                           	callstack 0
   151  000011                     	ds	4
   152  000015                     _DecVar:
   153                           	callstack 0
   154  000015                     	ds	4
   155                           
   156                           	psect	cstackCOMRAM
   157  000001                     __pcstackCOMRAM:
   158                           	callstack 0
   159  000001                     USARTAsyncInit@bgr:
   160                           	callstack 0
   161  000001                     USARTPrint@str:
   162                           	callstack 0
   163  000001                     Wait_ms@value:
   164                           	callstack 0
   165                           
   166                           ; 4 bytes @ 0x0
   167  000001                     	ds	2
   168  000003                     
   169                           ; 1 bytes @ 0x2
   170  000003                     	ds	2
   171  000005                     ??_Wait_ms:
   172                           
   173                           ; 1 bytes @ 0x4
   174  000005                     	ds	4
   175  000009                     Wait_ms@x:
   176                           	callstack 0
   177                           
   178                           ; 4 bytes @ 0x8
   179  000009                     	ds	4
   180  00000D                     main@cfg:
   181                           	callstack 0
   182                           
   183                           ; 4 bytes @ 0xC
   184  00000D                     	ds	4
   185                           
   186 ;;
   187 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   188 ;;
   189 ;; *************** function _main *****************
   190 ;; Defined at:
   191 ;;		line 15 in file "Src/main.c"
   192 ;; Parameters:    Size  Location     Type
   193 ;;		None
   194 ;; Auto vars:     Size  Location     Type
   195 ;;  cfg             4   12[COMRAM] struct .
   196 ;; Return value:  Size  Location     Type
   197 ;;                  1    wreg      void 
   198 ;; Registers used:
   199 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   200 ;; Tracked objects:
   201 ;;		On entry : 0/0
   202 ;;		On exit  : 0/0
   203 ;;		Unchanged: 0/0
   204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   205 ;;      Params:         0       0       0       0       0       0       0
   206 ;;      Locals:         4       0       0       0       0       0       0
   207 ;;      Temps:          0       0       0       0       0       0       0
   208 ;;      Totals:         4       0       0       0       0       0       0
   209 ;;Total ram usage:        4 bytes
   210 ;; Hardware stack levels required when called: 3
   211 ;; This function calls:
   212 ;;		_SystimeInit
   213 ;;		_USARTAsyncInit
   214 ;;		_USARTPrint
   215 ;;		_Wait_ms
   216 ;; This function is called by:
   217 ;;		Startup code after reset
   218 ;; This function uses a non-reentrant model
   219 ;;
   220                           
   221                           	psect	text0
   222  000688                     __ptext0:
   223                           	callstack 0
   224  000688                     _main:
   225                           	callstack 0
   226  000688  FFFF               	dw	65535	; assembler added errata NOP
   227                           
   228                           ;main.c: 16: SystimeInit();
   229                           
   230                           ;incstack = 0
   231  00068A  EC9F  F003         	call	_SystimeInit	;wreg free
   232                           
   233                           ;main.c: 17: IO.Bytes[(uint8_t)0x00 + 18] &= ~(1 << 0x0);
   234  00068E  9092               	bcf	146,0,c	;volatile
   235                           
   236                           ;main.c: 18: IO.Bytes[0x00 + 9] &= (~(1 << 0x0));
   237  000690  9089               	bcf	137,0,c	;volatile
   238                           
   239                           ;main.c: 19: ConfigType cfg;;main.c: 20: cfg.grp1 = 0x20 | 0x00 | 0x04;
   240  000692  0E24               	movlw	36
   241  000694  6E0D               	movwf	main@cfg^0,c
   242                           
   243                           ;main.c: 21: cfg.grp2 = 0x80 | 0x10;
   244  000696  0E90               	movlw	144
   245  000698  6E0E               	movwf	(main@cfg+1)^0,c
   246                           
   247                           ;main.c: 22: USARTAsyncInit(25);
   248  00069A  0E19               	movlw	25
   249  00069C  ECBD  F003         	call	_USARTAsyncInit
   250                           
   251                           ;main.c: 26: USARTPrint("Initialization...");
   252  0006A0  0E02               	movlw	low STR_1
   253  0006A2  6E01               	movwf	USARTPrint@str^0,c
   254  0006A4  0E06               	movlw	high STR_1
   255  0006A6  6E02               	movwf	(USARTPrint@str+1)^0,c
   256  0006A8  EC64  F003         	call	_USARTPrint	;wreg free
   257  0006AC                     l1232:
   258  0006AC  FFFF               	dw	65535	; assembler added errata NOP
   259                           
   260                           ;main.c: 29: {;main.c: 30: IO.Bytes[0x00 + 9] ^= (1 << 0x0);
   261  0006AE  0E01               	movlw	1
   262  0006B0  1A89               	xorwf	137,f,c	;volatile
   263                           
   264                           ;main.c: 31: Wait_ms(500);
   265  0006B2  0EF4               	movlw	244
   266  0006B4  6E01               	movwf	Wait_ms@value^0,c
   267  0006B6  0E01               	movlw	1
   268  0006B8  6E02               	movwf	(Wait_ms@value+1)^0,c
   269  0006BA  0E00               	movlw	0
   270  0006BC  6E03               	movwf	(Wait_ms@value+2)^0,c
   271  0006BE  0E00               	movlw	0
   272  0006C0  6E04               	movwf	(Wait_ms@value+3)^0,c
   273  0006C2  EC0B  F003         	call	_Wait_ms	;wreg free
   274  0006C6  D7F2               	goto	l1232
   275  0006C8                     __end_of_main:
   276                           	callstack 0
   277                           
   278 ;; *************** function _Wait_ms *****************
   279 ;; Defined at:
   280 ;;		line 103 in file "Src/SystemTime.c"
   281 ;; Parameters:    Size  Location     Type
   282 ;;  value           4    0[COMRAM] unsigned long 
   283 ;; Auto vars:     Size  Location     Type
   284 ;;  x               4    8[COMRAM] unsigned long 
   285 ;; Return value:  Size  Location     Type
   286 ;;                  1    wreg      void 
   287 ;; Registers used:
   288 ;;		wreg, status,2, status,0
   289 ;; Tracked objects:
   290 ;;		On entry : 0/0
   291 ;;		On exit  : 0/0
   292 ;;		Unchanged: 0/0
   293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   294 ;;      Params:         4       0       0       0       0       0       0
   295 ;;      Locals:         4       0       0       0       0       0       0
   296 ;;      Temps:          4       0       0       0       0       0       0
   297 ;;      Totals:        12       0       0       0       0       0       0
   298 ;;Total ram usage:       12 bytes
   299 ;; Hardware stack levels used: 1
   300 ;; Hardware stack levels required when called: 2
   301 ;; This function calls:
   302 ;;		Nothing
   303 ;; This function is called by:
   304 ;;		_main
   305 ;; This function uses a non-reentrant model
   306 ;;
   307                           
   308                           	psect	text1
   309  000616                     __ptext1:
   310                           	callstack 0
   311  000616                     _Wait_ms:
   312                           	callstack 0
   313  000616  FFFF               	dw	65535	; assembler added errata NOP
   314                           
   315                           ;SystemTime.c: 106: uint32_t x = IncVar;
   316                           
   317                           ;incstack = 0
   318  000618  C011  F009         	movff	_IncVar,Wait_ms@x	;volatile
   319  00061C  C012  F00A         	movff	_IncVar+1,Wait_ms@x+1	;volatile
   320  000620  C013  F00B         	movff	_IncVar+2,Wait_ms@x+2	;volatile
   321  000624  C014  F00C         	movff	_IncVar+3,Wait_ms@x+3	;volatile
   322                           
   323                           ;SystemTime.c: 108: while((value != 0)){
   324  000628  D025               	goto	u260
   325  00062A                     l1212:
   326  00062A  FFFF               	dw	65535	; assembler added errata NOP
   327                           
   328                           ;SystemTime.c: 111: --value;
   329  00062C  0601               	decf	Wait_ms@value^0,f,c
   330  00062E  0E00               	movlw	0
   331  000630  5A02               	subwfb	(Wait_ms@value+1)^0,f,c
   332  000632  5A03               	subwfb	(Wait_ms@value+2)^0,f,c
   333  000634  5A04               	subwfb	(Wait_ms@value+3)^0,f,c
   334                           
   335                           ;SystemTime.c: 112: x+=1;
   336  000636  0E01               	movlw	1
   337  000638  2609               	addwf	Wait_ms@x^0,f,c
   338  00063A  0E00               	movlw	0
   339  00063C  220A               	addwfc	(Wait_ms@x+1)^0,f,c
   340  00063E  220B               	addwfc	(Wait_ms@x+2)^0,f,c
   341  000640  220C               	addwfc	(Wait_ms@x+3)^0,f,c
   342  000642                     l211:
   343  000642  FFFF               	dw	65535	; assembler added errata NOP
   344  000644  5001               	movf	Wait_ms@value^0,w,c
   345  000646  1002               	iorwf	(Wait_ms@value+1)^0,w,c
   346  000648  1003               	iorwf	(Wait_ms@value+2)^0,w,c
   347  00064A  1004               	iorwf	(Wait_ms@value+3)^0,w,c
   348  00064C  B4D8               	btfsc	status,2,c
   349  00064E  D012               	goto	u260
   350  000650  5009               	movf	Wait_ms@x^0,w,c
   351  000652  5C11               	subwf	_IncVar^0,w,c	;volatile
   352  000654  6E05               	movwf	??_Wait_ms^0,c
   353  000656  500A               	movf	(Wait_ms@x+1)^0,w,c
   354  000658  5812               	subwfb	(_IncVar+1)^0,w,c	;volatile
   355  00065A  6E06               	movwf	(??_Wait_ms+1)^0,c
   356  00065C  500B               	movf	(Wait_ms@x+2)^0,w,c
   357  00065E  5813               	subwfb	(_IncVar+2)^0,w,c	;volatile
   358  000660  6E07               	movwf	(??_Wait_ms+2)^0,c
   359  000662  500C               	movf	(Wait_ms@x+3)^0,w,c
   360  000664  5814               	subwfb	(_IncVar+3)^0,w,c	;volatile
   361  000666  6E08               	movwf	(??_Wait_ms+3)^0,c
   362  000668  5005               	movf	??_Wait_ms^0,w,c
   363  00066A  1006               	iorwf	(??_Wait_ms+1)^0,w,c
   364  00066C  1007               	iorwf	(??_Wait_ms+2)^0,w,c
   365  00066E  1008               	iorwf	(??_Wait_ms+3)^0,w,c
   366  000670  A4D8               	btfss	status,2,c
   367  000672  D7DB               	goto	l1212
   368  000674                     u260:
   369  000674  FFFF               	dw	65535	; assembler added errata NOP
   370  000676  5001               	movf	Wait_ms@value^0,w,c
   371  000678  1002               	iorwf	(Wait_ms@value+1)^0,w,c
   372  00067A  1003               	iorwf	(Wait_ms@value+2)^0,w,c
   373  00067C  1004               	iorwf	(Wait_ms@value+3)^0,w,c
   374  00067E  B4D8               	btfsc	status,2,c
   375  000680  0012               	return		;funcret
   376  000682  FFFF               	dw	65535	; assembler added errata NOP
   377  000684  D7DE               	goto	l211
   378  000686  FFFF               	dw	65535	; errata NOP
   379  000688                     __end_of_Wait_ms:
   380                           	callstack 0
   381                           
   382 ;; *************** function _USARTPrint *****************
   383 ;; Defined at:
   384 ;;		line 113 in file "Src/USART.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;  str             2    0[COMRAM] PTR const unsigned char 
   387 ;;		 -> STR_1(18), 
   388 ;; Auto vars:     Size  Location     Type
   389 ;;		None
   390 ;; Return value:  Size  Location     Type
   391 ;;                  1    wreg      void 
   392 ;; Registers used:
   393 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   394 ;; Tracked objects:
   395 ;;		On entry : 0/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   399 ;;      Params:         2       0       0       0       0       0       0
   400 ;;      Locals:         0       0       0       0       0       0       0
   401 ;;      Temps:          0       0       0       0       0       0       0
   402 ;;      Totals:         2       0       0       0       0       0       0
   403 ;;Total ram usage:        2 bytes
   404 ;; Hardware stack levels used: 1
   405 ;; Hardware stack levels required when called: 2
   406 ;; This function calls:
   407 ;;		Nothing
   408 ;; This function is called by:
   409 ;;		_main
   410 ;; This function uses a non-reentrant model
   411 ;;
   412                           
   413                           	psect	text2
   414  0006C8                     __ptext2:
   415                           	callstack 0
   416  0006C8                     _USARTPrint:
   417                           	callstack 0
   418  0006C8  FFFF               	dw	65535	; assembler added errata NOP
   419                           
   420                           ;USART.c: 115: while(*str!='\0'){
   421                           
   422                           ;incstack = 0
   423  0006CA  D00E               	goto	l1208
   424  0006CC                     l1200:
   425  0006CC  FFFF               	dw	65535	; assembler added errata NOP
   426  0006CE  50AC               	movf	172,w,c	;volatile
   427  0006D0  A2AC               	btfss	4012,1,c	;volatile
   428  0006D2  D7FC               	goto	l1200
   429                           
   430                           ;USART.c: 117: TXREG = *str;
   431  0006D4  C001  FFF6         	movff	USARTPrint@str,tblptrl
   432  0006D8  C002  FFF7         	movff	USARTPrint@str+1,tblptrh
   433  0006DC                     	if	0	;tblptru may be non-zero
   434  0006DC                     	endif
   435  0006DC                     	if	0	;tblptru may be non-zero
   436  0006DC                     	endif
   437  0006DC  0008               	tblrd		*
   438  0006DE  FFFF               	dw	65535	; errata NOP
   439  0006E0  CFF5 FFAD          	movff	tablat,4013	;volatile
   440                           
   441                           ;USART.c: 118: ++str;
   442  0006E4  4A01               	infsnz	USARTPrint@str^0,f,c
   443  0006E6  2A02               	incf	(USARTPrint@str+1)^0,f,c
   444  0006E8                     l1208:
   445  0006E8  FFFF               	dw	65535	; assembler added errata NOP
   446  0006EA  C001  FFF6         	movff	USARTPrint@str,tblptrl
   447  0006EE  C002  FFF7         	movff	USARTPrint@str+1,tblptrh
   448  0006F2                     	if	0	;tblptru may be non-zero
   449  0006F2                     	endif
   450  0006F2                     	if	0	;tblptru may be non-zero
   451  0006F2                     	endif
   452  0006F2  0008               	tblrd		*
   453  0006F4  FFFF               	dw	65535	; errata NOP
   454  0006F6  50F5               	movf	tablat,w,c
   455  0006F8  0900               	iorlw	0
   456  0006FA  B4D8               	btfsc	status,2,c
   457  0006FC  0012               	return		;funcret
   458  0006FE  FFFF               	dw	65535	; assembler added errata NOP
   459  000700  D7E5               	goto	l1200
   460  000702  FFFF               	dw	65535	; errata NOP
   461  000704                     __end_of_USARTPrint:
   462                           	callstack 0
   463                           
   464 ;; *************** function _USARTAsyncInit *****************
   465 ;; Defined at:
   466 ;;		line 62 in file "Src/USART.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;  bgr             1    wreg     unsigned char 
   469 ;; Auto vars:     Size  Location     Type
   470 ;;  bgr             1    0[COMRAM] unsigned char 
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      void 
   473 ;; Registers used:
   474 ;;		wreg, status,2
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   480 ;;      Params:         0       0       0       0       0       0       0
   481 ;;      Locals:         1       0       0       0       0       0       0
   482 ;;      Temps:          0       0       0       0       0       0       0
   483 ;;      Totals:         1       0       0       0       0       0       0
   484 ;;Total ram usage:        1 bytes
   485 ;; Hardware stack levels used: 1
   486 ;; Hardware stack levels required when called: 2
   487 ;; This function calls:
   488 ;;		Nothing
   489 ;; This function is called by:
   490 ;;		_main
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494                           	psect	text3
   495  00077A                     __ptext3:
   496                           	callstack 0
   497  00077A                     _USARTAsyncInit:
   498                           	callstack 0
   499  00077A  FFFF               	dw	65535	; assembler added errata NOP
   500                           
   501                           ;incstack = 0
   502                           ;USARTAsyncInit@bgr stored from wreg
   503  00077C  6E01               	movwf	USARTAsyncInit@bgr^0,c
   504                           
   505                           ;USART.c: 65: TXSTA = 0x24;
   506  00077E  0E24               	movlw	36
   507  000780  6EAC               	movwf	172,c	;volatile
   508                           
   509                           ;USART.c: 66: RCSTA = 0x90;
   510  000782  0E90               	movlw	144
   511  000784  6EAB               	movwf	171,c	;volatile
   512                           
   513                           ;USART.c: 67: SPBRG = bgr;
   514  000786  C001  FFAF         	movff	USARTAsyncInit@bgr,4015	;volatile
   515  00078A  0012               	return		;funcret
   516  00078C  FFFF               	dw	65535	; errata NOP
   517  00078E                     __end_of_USARTAsyncInit:
   518                           	callstack 0
   519                           
   520 ;; *************** function _SystimeInit *****************
   521 ;; Defined at:
   522 ;;		line 55 in file "Src/SystemTime.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;		None
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg, status,2, status,0
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   536 ;;      Params:         0       0       0       0       0       0       0
   537 ;;      Locals:         0       0       0       0       0       0       0
   538 ;;      Temps:          0       0       0       0       0       0       0
   539 ;;      Totals:         0       0       0       0       0       0       0
   540 ;;Total ram usage:        0 bytes
   541 ;; Hardware stack levels used: 1
   542 ;; Hardware stack levels required when called: 2
   543 ;; This function calls:
   544 ;;		Nothing
   545 ;; This function is called by:
   546 ;;		_main
   547 ;; This function uses a non-reentrant model
   548 ;;
   549                           
   550                           	psect	text4
   551  00073E                     __ptext4:
   552                           	callstack 0
   553  00073E                     _SystimeInit:
   554                           	callstack 0
   555  00073E  FFFF               	dw	65535	; assembler added errata NOP
   556                           
   557                           ;incstack = 0
   558  000740  0EFF               	movlw	255
   559  000742  6E1A               	movwf	(_val+1)^0,c	;volatile
   560  000744  0E08               	movlw	8
   561  000746  6E19               	movwf	_val^0,c	;volatile
   562                           
   563                           ;SystemTime.c: 64: };SystemTime.c: 66: INTCON |= 0xC0;
   564                           
   565                           ;SystemTime.c: 60: }
   566  000748  0EC0               	movlw	192
   567  00074A  12F2               	iorwf	242,f,c	;volatile
   568                           
   569                           ;SystemTime.c: 68: T0CON = 0x81;
   570  00074C  0E81               	movlw	129
   571  00074E  6ED5               	movwf	213,c	;volatile
   572                           
   573                           ;SystemTime.c: 69: TMR0 = val;
   574  000750  C019  FFD6         	movff	_val,4054	;volatile
   575  000754  C01A  FFD7         	movff	_val+1,4055	;volatile
   576                           
   577                           ;SystemTime.c: 70: TMR0IF = 0;
   578  000758  94F2               	bcf	4082,2,c	;volatile
   579                           
   580                           ;SystemTime.c: 71: TMR0IE = 1;
   581  00075A  8AF2               	bsf	4082,5,c	;volatile
   582  00075C  0012               	return		;funcret
   583  00075E  FFFF               	dw	65535	; errata NOP
   584  000760                     __end_of_SystimeInit:
   585                           	callstack 0
   586                           
   587 ;; *************** function _Isr *****************
   588 ;; Defined at:
   589 ;;		line 63 in file "Src/ISR.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;		None
   592 ;; Auto vars:     Size  Location     Type
   593 ;;		None
   594 ;; Return value:  Size  Location     Type
   595 ;;                  1    wreg      void 
   596 ;; Registers used:
   597 ;;		wreg, status,2, status,0, cstack
   598 ;; Tracked objects:
   599 ;;		On entry : 0/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   603 ;;      Params:         0       0       0       0       0       0       0
   604 ;;      Locals:         0       0       0       0       0       0       0
   605 ;;      Temps:          0       0       0       0       0       0       0
   606 ;;      Totals:         0       0       0       0       0       0       0
   607 ;;Total ram usage:        0 bytes
   608 ;; Hardware stack levels used: 1
   609 ;; Hardware stack levels required when called: 1
   610 ;; This function calls:
   611 ;;		_SysTimeCallBack
   612 ;; This function is called by:
   613 ;;		Interrupt level 2
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           	psect	intcode
   618  000008                     __pintcode:
   619                           	callstack 0
   620  000008                     _Isr:
   621                           	callstack 0
   622  000008  FFFF               	dw	65535	; assembler added errata NOP
   623                           
   624                           ;incstack = 0
   625  00000A  821B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   626                           
   627                           ;ISR.c: 65: SysTimeCallBack();
   628  00000C  EC82  F003         	call	_SysTimeCallBack	;wreg free
   629  000010  921B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   630  000012  0011               	retfie		f
   631  000014  FFFF               	dw	65535	; errata NOP
   632  000016                     __end_of_Isr:
   633                           	callstack 0
   634                           
   635 ;; *************** function _SysTimeCallBack *****************
   636 ;; Defined at:
   637 ;;		line 137 in file "Src/SystemTime.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;		None
   640 ;; Auto vars:     Size  Location     Type
   641 ;;		None
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg, status,2, status,0
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   651 ;;      Params:         0       0       0       0       0       0       0
   652 ;;      Locals:         0       0       0       0       0       0       0
   653 ;;      Temps:          0       0       0       0       0       0       0
   654 ;;      Totals:         0       0       0       0       0       0       0
   655 ;;Total ram usage:        0 bytes
   656 ;; Hardware stack levels used: 1
   657 ;; This function calls:
   658 ;;		Nothing
   659 ;; This function is called by:
   660 ;;		_Isr
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           	psect	text6
   665  000704                     __ptext6:
   666                           	callstack 0
   667  000704                     _SysTimeCallBack:
   668                           	callstack 0
   669  000704  FFFF               	dw	65535	; assembler added errata NOP
   670                           
   671                           ;SystemTime.c: 140: if(TMR0IF)
   672                           
   673                           ;incstack = 0
   674  000706  A4F2               	btfss	4082,2,c	;volatile
   675  000708  D017               	goto	i2l228
   676                           
   677                           ;SystemTime.c: 141: {;SystemTime.c: 142: if(DecVar != 0)
   678  00070A  5015               	movf	_DecVar^0,w,c	;volatile
   679  00070C  1016               	iorwf	(_DecVar+1)^0,w,c	;volatile
   680  00070E  1017               	iorwf	(_DecVar+2)^0,w,c	;volatile
   681  000710  1018               	iorwf	(_DecVar+3)^0,w,c	;volatile
   682  000712  B4D8               	btfsc	status,2,c
   683  000714  D005               	goto	i2l227
   684                           
   685                           ;SystemTime.c: 143: --DecVar;
   686  000716  0615               	decf	_DecVar^0,f,c	;volatile
   687  000718  0E00               	movlw	0
   688  00071A  5A16               	subwfb	(_DecVar+1)^0,f,c	;volatile
   689  00071C  5A17               	subwfb	(_DecVar+2)^0,f,c	;volatile
   690  00071E  5A18               	subwfb	(_DecVar+3)^0,f,c	;volatile
   691  000720                     i2l227:
   692  000720  FFFF               	dw	65535	; assembler added errata NOP
   693                           
   694                           ;SystemTime.c: 145: ++IncVar;
   695  000722  0E01               	movlw	1
   696  000724  2611               	addwf	_IncVar^0,f,c	;volatile
   697  000726  0E00               	movlw	0
   698  000728  2212               	addwfc	(_IncVar+1)^0,f,c	;volatile
   699  00072A  2213               	addwfc	(_IncVar+2)^0,f,c	;volatile
   700  00072C  2214               	addwfc	(_IncVar+3)^0,f,c	;volatile
   701                           
   702                           ;SystemTime.c: 147: TMR0IF = 0;
   703  00072E  94F2               	bcf	4082,2,c	;volatile
   704                           
   705                           ;SystemTime.c: 148: TMR0 = val;
   706  000730  C019  FFD6         	movff	_val,4054	;volatile
   707  000734  C01A  FFD7         	movff	_val+1,4055	;volatile
   708  000738                     i2l228:
   709  000738  FFFF               	dw	65535	; assembler added errata NOP
   710  00073A  0012               	return		;funcret
   711  00073C  FFFF               	dw	65535	; errata NOP
   712  00073E                     __end_of_SysTimeCallBack:
   713                           	callstack 0
   714                           
   715                           	psect	rparam
   716  0000                     
   717                           	psect	temp
   718  00001B                     btemp:
   719                           	callstack 0
   720  00001B                     	ds	1
   721  0000                     int$flags	set	btemp
   722  0000                     wtemp8	set	btemp+1
   723  0000                     ttemp5	set	btemp+1
   724  0000                     ttemp6	set	btemp+4
   725  0000                     ttemp7	set	btemp+8
   726                           
   727                           	psect	idloc
   728                           
   729                           ;Config register IDLOC0 @ 0x200000
   730                           ;	unspecified, using default values
   731  200000                     	org	2097152
   732  200000  FF                 	db	255
   733                           
   734                           ;Config register IDLOC1 @ 0x200001
   735                           ;	unspecified, using default values
   736  200001                     	org	2097153
   737  200001  FF                 	db	255
   738                           
   739                           ;Config register IDLOC2 @ 0x200002
   740                           ;	unspecified, using default values
   741  200002                     	org	2097154
   742  200002  FF                 	db	255
   743                           
   744                           ;Config register IDLOC3 @ 0x200003
   745                           ;	unspecified, using default values
   746  200003                     	org	2097155
   747  200003  FF                 	db	255
   748                           
   749                           ;Config register IDLOC4 @ 0x200004
   750                           ;	unspecified, using default values
   751  200004                     	org	2097156
   752  200004  FF                 	db	255
   753                           
   754                           ;Config register IDLOC5 @ 0x200005
   755                           ;	unspecified, using default values
   756  200005                     	org	2097157
   757  200005  FF                 	db	255
   758                           
   759                           ;Config register IDLOC6 @ 0x200006
   760                           ;	unspecified, using default values
   761  200006                     	org	2097158
   762  200006  FF                 	db	255
   763                           
   764                           ;Config register IDLOC7 @ 0x200007
   765                           ;	unspecified, using default values
   766  200007                     	org	2097159
   767  200007  FF                 	db	255
   768                           
   769                           	psect	config
   770                           
   771                           ; Padding undefined space
   772  300000                     	org	3145728
   773  300000  FF                 	db	255
   774                           
   775                           ;Config register CONFIG1H @ 0x300001
   776                           ;	Oscillator Selection bits
   777                           ;	OSC = HS, HS oscillator
   778                           ;	Oscillator System Clock Switch Enable bit
   779                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
   780  300001                     	org	3145729
   781  300001  22                 	db	34
   782                           
   783                           ;Config register CONFIG2L @ 0x300002
   784                           ;	Power-up Timer Enable bit
   785                           ;	PWRT = OFF, PWRT disabled
   786                           ;	Brown-out Reset Enable bit
   787                           ;	BOR = ON, Brown-out Reset enabled
   788                           ;	Brown-out Reset Voltage bits
   789                           ;	BORV = 20, VBOR set to 2.0V
   790  300002                     	org	3145730
   791  300002  0F                 	db	15
   792                           
   793                           ;Config register CONFIG2H @ 0x300003
   794                           ;	Watchdog Timer Enable bit
   795                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   796                           ;	Watchdog Timer Postscale Select bits
   797                           ;	WDTPS = 128, 1:128
   798  300003                     	org	3145731
   799  300003  0E                 	db	14
   800                           
   801                           ; Padding undefined space
   802  300004                     	org	3145732
   803  300004  FF                 	db	255
   804                           
   805                           ;Config register CONFIG3H @ 0x300005
   806                           ;	CCP2 Mux bit
   807                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
   808  300005                     	org	3145733
   809  300005  01                 	db	1
   810                           
   811                           ;Config register CONFIG4L @ 0x300006
   812                           ;	Stack Full/Underflow Reset Enable bit
   813                           ;	STVR = OFF, Stack Full/Underflow will not cause RESET
   814                           ;	Low Voltage ICSP Enable bit
   815                           ;	LVP = OFF, Low Voltage ICSP disabled
   816                           ;	Background Debugger Enable bit
   817                           ;	DEBUG = 0x1, unprogrammed default
   818  300006                     	org	3145734
   819  300006  80                 	db	128
   820                           
   821                           ; Padding undefined space
   822  300007                     	org	3145735
   823  300007  FF                 	db	255
   824                           
   825                           ;Config register CONFIG5L @ 0x300008
   826                           ;	Code Protection bit
   827                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
   828                           ;	Code Protection bit
   829                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
   830                           ;	Code Protection bit
   831                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
   832                           ;	Code Protection bit
   833                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
   834  300008                     	org	3145736
   835  300008  0F                 	db	15
   836                           
   837                           ;Config register CONFIG5H @ 0x300009
   838                           ;	Boot Block Code Protection bit
   839                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
   840                           ;	Data EEPROM Code Protection bit
   841                           ;	CPD = OFF, Data EEPROM not code protected
   842  300009                     	org	3145737
   843  300009  C0                 	db	192
   844                           
   845                           ;Config register CONFIG6L @ 0x30000A
   846                           ;	Write Protection bit
   847                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
   848                           ;	Write Protection bit
   849                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
   850                           ;	Write Protection bit
   851                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
   852                           ;	Write Protection bit
   853                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
   854  30000A                     	org	3145738
   855  30000A  0F                 	db	15
   856                           
   857                           ;Config register CONFIG6H @ 0x30000B
   858                           ;	Configuration Register Write Protection bit
   859                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
   860                           ;	Boot Block Write Protection bit
   861                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
   862                           ;	Data EEPROM Write Protection bit
   863                           ;	WRTD = OFF, Data EEPROM not write protected
   864  30000B                     	org	3145739
   865  30000B  E0                 	db	224
   866                           
   867                           ;Config register CONFIG7L @ 0x30000C
   868                           ;	Table Read Protection bit
   869                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
   870                           ;	Table Read Protection bit
   871                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
   872                           ;	Table Read Protection bit
   873                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
   874                           ;	Table Read Protection bit
   875                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
   876  30000C                     	org	3145740
   877  30000C  0F                 	db	15
   878                           
   879                           ;Config register CONFIG7H @ 0x30000D
   880                           ;	Boot Block Table Read Protection bit
   881                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
   882  30000D                     	org	3145741
   883  30000D  40                 	db	64
   884                           tosu	equ	0xFFF
   885                           tosh	equ	0xFFE
   886                           tosl	equ	0xFFD
   887                           stkptr	equ	0xFFC
   888                           pclatu	equ	0xFFB
   889                           pclath	equ	0xFFA
   890                           pcl	equ	0xFF9
   891                           tblptru	equ	0xFF8
   892                           tblptrh	equ	0xFF7
   893                           tblptrl	equ	0xFF6
   894                           tablat	equ	0xFF5
   895                           prodh	equ	0xFF4
   896                           prodl	equ	0xFF3
   897                           indf0	equ	0xFEF
   898                           postinc0	equ	0xFEE
   899                           postdec0	equ	0xFED
   900                           preinc0	equ	0xFEC
   901                           plusw0	equ	0xFEB
   902                           fsr0h	equ	0xFEA
   903                           fsr0l	equ	0xFE9
   904                           wreg	equ	0xFE8
   905                           indf1	equ	0xFE7
   906                           postinc1	equ	0xFE6
   907                           postdec1	equ	0xFE5
   908                           preinc1	equ	0xFE4
   909                           plusw1	equ	0xFE3
   910                           fsr1h	equ	0xFE2
   911                           fsr1l	equ	0xFE1
   912                           bsr	equ	0xFE0
   913                           indf2	equ	0xFDF
   914                           postinc2	equ	0xFDE
   915                           postdec2	equ	0xFDD
   916                           preinc2	equ	0xFDC
   917                           plusw2	equ	0xFDB
   918                           fsr2h	equ	0xFDA
   919                           fsr2l	equ	0xFD9
   920                           status	equ	0xFD8

Data Sizes:
    Strings     18
    Constant    1
    Data        0
    BSS         8
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     16      26
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    USARTPrint@str	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 


Critical Paths under _main in COMRAM

    _main->_Wait_ms

Critical Paths under _Isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     306
                                             12 COMRAM     4     4      0
                        _SystimeInit
                     _USARTAsyncInit
                         _USARTPrint
                            _Wait_ms
 ---------------------------------------------------------------------------------
 (1) _Wait_ms                                             12     8      4     145
                                              0 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (1) _USARTPrint                                           2     0      2     121
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _USARTAsyncInit                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SystimeInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Isr                                                  0     0      0       0
                    _SysTimeCallBack
 ---------------------------------------------------------------------------------
 (3) _SysTimeCallBack                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SystimeInit
   _USARTAsyncInit
   _USARTPrint
   _Wait_ms

 _Isr (ROOT)
   _SysTimeCallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     10      1A       1       20.6%
BITBIGSFRllhhhl     25      0       0      18        0.0%
BITBIGSFRllhhhh     18      0       0      17        0.0%
BITBIGSFRh           D      0       0      16        0.0%
BITBIGSFRllhhll      8      0       0      19        0.0%
BITBIGSFRlll         6      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1A      21        0.0%
DATA                 0      0      1A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Feb 07 11:09:58 2023

                                                        _IO 000F80  
                                                       l211 0642  
                                                       u260 0674  
                                                       _Isr 0008  
                                                       _val 0019  
                                                       wreg 000FE8  
                                           ?_USARTAsyncInit 0001  
                                                      ?_Isr 0001  
                                                      l1200 06CC  
                                                      l1212 062A  
                                                      l1208 06E8  
                                                      l1232 06AC  
                                                      STR_1 0602  
                                                      _BRGH 007D62  
                                                      _CREN 007D5C  
                                                      _IPR1 000F9F  
                                                      _IPR2 000FA2  
                                                      _PIE1 000F9D  
                                                      _PIE2 000FA0  
                                                      _RCIF 007CF5  
                                                      _PIR1 000F9E  
                                                      _PIR2 000FA1  
                                                      _OERR 007D59  
                                                      _TMR0 000FD6  
                                                      _TRMT 007D61  
                                                      _SYNC 007D64  
                                                      _main 0688  
                                                      btemp 001B  
                                                      start 0016  
                                              ___param_bank 000000  
                                                     ??_Isr 0001  
                                           __end_of_Wait_ms 0688  
                                                     ?_main 0001  
                                                     _T0CON 000FD5  
                                                     i2l227 0720  
                                                     i2l228 0738  
                                                     _RCREG 000FAE  
                                                     _RCSTA 000FAB  
                                                     _SPBRG 000FAF  
                                                     _TXREG 000FAD  
                                                     _TXSTA 000FAC  
                                          __end_of_OSC_FREQ 0602  
                                                     tablat 000FF5  
                                                     ttemp5 001C  
                                                     ttemp6 001F  
                                                     ttemp7 0023  
                                                     status 000FD8  
                                                     wtemp8 001C  
                                               ?_USARTPrint 0001  
                                           __initialization 0760  
                                              __end_of_main 06C8  
                                                    ??_main 000D  
                                             __activetblptr 000002  
                                                    _INTCON 000FF2  
                                                    _TMR0IE 007F95  
                                                    _TMR0IF 007F92  
                                                    _DecVar 0015  
                                         ??_SysTimeCallBack 0001  
                                                    _IncVar 0011  
                                                 ??_Wait_ms 0005  
                                                    clear_0 0766  
                                                    isa$std 000001  
                                              __mediumconst 0000  
                                                    tblptrh 000FF7  
                                                    tblptrl 000FF6  
                                                    tblptru 000FF8  
                                             USARTPrint@str 0001  
                                                __accesstop 0080  
                                   __end_of__initialization 076C  
                                             ___rparam_used 000001  
                                            __pcstackCOMRAM 0001  
                                          ??_USARTAsyncInit 0001  
                                                __pnvCOMRAM 0019  
                                                   _INTCON2 000FF1  
                                                   _INTCON3 000FF0  
                                             ??_SystimeInit 0001  
                                                   __Hparam 0000  
                                              ??_USARTPrint 0003  
                                                   __Lparam 0000  
                                                   _Wait_ms 0616  
                                              __psmallconst 0600  
                                                   __pcinit 0760  
                                                   __ramtop 0600  
                                                   __ptext0 0688  
                                                   __ptext1 0616  
                                                   __ptext2 06C8  
                                                   __ptext3 077A  
                                                   __ptext4 073E  
                                                   __ptext6 0704  
                                           _SysTimeCallBack 0704  
                                        __end_of_USARTPrint 0704  
                                                   main@cfg 000D  
                                      end_of_initialization 076C  
                                             __Lmediumconst 0000  
                                                   postinc0 000FEE  
                                       __end_of_SystimeInit 0760  
                                   __end_of_SysTimeCallBack 073E  
                                       start_initialization 0760  
                                               __end_of_Isr 0016  
                                               _SystimeInit 073E  
                                               __pbssCOMRAM 0011  
                                                  ?_Wait_ms 0001  
                                                 __pintcode 0008  
                                          ?_SysTimeCallBack 0001  
                                               __smallconst 0600  
                                                  _OSC_FREQ 0601  
                                              Wait_ms@value 0001  
                                                  __Hrparam 0000  
                                                  Wait_ms@x 0009  
                                                  __Lrparam 0000  
                                              ?_SystimeInit 0001  
                                                  isa$xinst 000000  
                                                  int$flags 001B  
                                                  intlevel2 078E  
                                            _USARTAsyncInit 077A  
                                         USARTAsyncInit@bgr 0001  
                                    __end_of_USARTAsyncInit 078E  
                                                _USARTPrint 06C8  

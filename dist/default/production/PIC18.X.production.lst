

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jan 31 22:13:11 2023

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	intcode,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    13  0000                     
    14                           ; Version 1.45
    15                           ; Generated 16/11/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F452 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     
    49                           ; 1 bytes @ 0x16
    50 ;;
    51 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    52 ;;
    53 ;; *************** function _main *****************
    54 ;; Defined at:
    55 ;;		line 13 in file "Src/main.c"
    56 ;; Parameters:    Size  Location     Type
    57 ;;		None
    58 ;; Auto vars:     Size  Location     Type
    59 ;;		None
    60 ;; Return value:  Size  Location     Type
    61 ;;                  1    wreg      void 
    62 ;; Registers used:
    63 ;;		status,2, status,0
    64 ;; Tracked objects:
    65 ;;		On entry : 0/0
    66 ;;		On exit  : 0/0
    67 ;;		Unchanged: 0/0
    68 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
    69 ;;      Params:         0       0       0       0       0       0       0
    70 ;;      Locals:         0       0       0       0       0       0       0
    71 ;;      Temps:          0       0       0       0       0       0       0
    72 ;;      Totals:         0       0       0       0       0       0       0
    73 ;;Total ram usage:        0 bytes
    74 ;; Hardware stack levels required when called:    2
    75 ;; This function calls:
    76 ;;		Nothing
    77 ;; This function is called by:
    78 ;;		Startup code after reset
    79 ;; This function uses a non-reentrant model
    80 ;;
    81                           
    82                           	psect	text0
    83  00011C                     __ptext0:
    84                           	opt stack 0
    85  0000                     _INTCON2	set	4081
    86  0000                     _INTCON	set	4082
    87  0000                     _INTCON3	set	4080
    88  0000                     _PIE1	set	3997
    89  0000                     _PIE2	set	4000
    90  0000                     _PIR1	set	3998
    91  0000                     _PIR2	set	4001
    92  0000                     _IPR1	set	3999
    93  0000                     _IPR2	set	4002
    94  0000                     
    95                           ; #config settings
    96  00011C                     _main:
    97                           	opt stack 0
    98  00011C  FFFF               	dw	65535	; assembler added errata NOP
    99                           
   100                           ;main.c: 16: IO.Bytes[(uint8_t)0x00 + 18] &= ~(1 << 0x0);
   101                           
   102                           ;incstack = 0
   103  00011E  9092               	bcf	3986,0,c	;volatile
   104                           
   105                           ;main.c: 19: (INTCON2 |= 0x40);
   106  000120  8CF1               	bsf	intcon2,6,c	;volatile
   107  000122                     l9:
   108  000122  FFFF               	dw	65535	; assembler added errata NOP
   109                           
   110                           ;main.c: 21: {
   111  000124  D7FE               	goto	l9
   112  000126                     __end_of_main:
   113                           	opt stack 0
   114                           intcon2	equ	0xFF1
   115                           
   116                           	psect	cinit
   117  00010E                     __pcinit:
   118                           	opt stack 0
   119  00010E                     start_initialization:
   120                           	opt stack 0
   121  00010E                     __initialization:
   122                           	opt stack 0
   123  00010E                     end_of_initialization:
   124                           	opt stack 0
   125  00010E                     __end_of__initialization:
   126                           	opt stack 0
   127  00010E  9017               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   128  000110  9217               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   129  000112  0E00               	movlw	low (__Lmediumconst shr (0+16))
   130  000114  6EF8               	movwf	tblptru,c
   131  000116  0100               	movlb	0
   132  000118  EF8E  F000         	goto	_main	;jump to C main() function
   133                           tblptru	equ	0xFF8
   134                           intcon2	equ	0xFF1
   135                           
   136                           	psect	cstackCOMRAM
   137  000001                     __pcstackCOMRAM:
   138                           	opt stack 0
   139  000001                     ?_GetInterruptFlag:
   140                           	opt stack 0
   141  000001                     GetInterruptFlag@cnst:
   142                           	opt stack 0
   143                           
   144                           ; 2 bytes @ 0x0
   145  000001                     	ds	2
   146  000003                     GetInterruptFlag@var:
   147                           	opt stack 0
   148                           
   149                           ; 1 bytes @ 0x2
   150  000003                     	ds	1
   151  000004                     GetInterruptFlag@state:
   152                           	opt stack 0
   153                           
   154                           ; 1 bytes @ 0x3
   155  000004                     	ds	1
   156  000005                     ??_Isr:
   157                           
   158                           ; 1 bytes @ 0x4
   159  000005                     	ds	18
   160  000017                     tblptru	equ	0xFF8
   161                           intcon2	equ	0xFF1
   162                           
   163 ;; *************** function _Isr *****************
   164 ;; Defined at:
   165 ;;		line 62 in file "Src/ISR.c"
   166 ;; Parameters:    Size  Location     Type
   167 ;;		None
   168 ;; Auto vars:     Size  Location     Type
   169 ;;		None
   170 ;; Return value:  Size  Location     Type
   171 ;;                  1    wreg      void 
   172 ;; Registers used:
   173 ;;		wreg, status,2, status,0, cstack
   174 ;; Tracked objects:
   175 ;;		On entry : 0/0
   176 ;;		On exit  : 0/0
   177 ;;		Unchanged: 0/0
   178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   179 ;;      Params:         0       0       0       0       0       0       0
   180 ;;      Locals:         0       0       0       0       0       0       0
   181 ;;      Temps:         18       0       0       0       0       0       0
   182 ;;      Totals:        18       0       0       0       0       0       0
   183 ;;Total ram usage:       18 bytes
   184 ;; Hardware stack levels used:    1
   185 ;; Hardware stack levels required when called:    1
   186 ;; This function calls:
   187 ;;		_GetInterruptFlag
   188 ;; This function is called by:
   189 ;;		Interrupt level 2
   190 ;; This function uses a non-reentrant model
   191 ;;
   192                           
   193                           	psect	intcode
   194  000008                     __pintcode:
   195                           	opt stack 0
   196  000008                     _Isr:
   197                           	opt stack 0
   198  000008  FFFF               	dw	65535	; assembler added errata NOP
   199                           
   200                           ;incstack = 0
   201  00000A  8217               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   202  00000C  CFFA F005          	movff	pclath,??_Isr
   203  000010  CFFB F006          	movff	pclatu,??_Isr+1
   204  000014  CFE9 F007          	movff	fsr0l,??_Isr+2
   205  000018  CFEA F008          	movff	fsr0h,??_Isr+3
   206  00001C  CFE1 F009          	movff	fsr1l,??_Isr+4
   207  000020  CFE2 F00A          	movff	fsr1h,??_Isr+5
   208  000024  CFD9 F00B          	movff	fsr2l,??_Isr+6
   209  000028  CFDA F00C          	movff	fsr2h,??_Isr+7
   210  00002C  CFF3 F00D          	movff	prodl,??_Isr+8
   211  000030  CFF4 F00E          	movff	prodh,??_Isr+9
   212  000034  CFF6 F00F          	movff	tblptrl,??_Isr+10
   213  000038  CFF7 F010          	movff	tblptrh,??_Isr+11
   214  00003C  CFF8 F011          	movff	tblptru,??_Isr+12
   215  000040  CFF5 F012          	movff	tablat,??_Isr+13
   216  000044  C017  F013         	movff	btemp,??_Isr+14
   217  000048  C018  F014         	movff	btemp+1,??_Isr+15
   218  00004C  C019  F015         	movff	btemp+2,??_Isr+16
   219  000050  C01A  F016         	movff	btemp+3,??_Isr+17
   220                           
   221                           ;ISR.c: 64: if(GetInterruptFlag(0x02) == 0x02)
   222  000054  0E00               	movlw	0
   223  000056  6E02               	movwf	GetInterruptFlag@cnst+1,c
   224  000058  0E02               	movlw	2
   225  00005A  6E01               	movwf	GetInterruptFlag@cnst,c
   226  00005C  EC5E  F000         	call	_GetInterruptFlag	;wreg free
   227  000060  0E02               	movlw	2
   228  000062  1801               	xorwf	?_GetInterruptFlag,w,c
   229  000064  1002               	iorwf	?_GetInterruptFlag+1,w,c
   230  000066  B4D8               	btfsc	status,2,c
   231                           
   232                           ;ISR.c: 65: {
   233                           ;ISR.c: 66: IO.Bytes[0x00 + 9] |= (1 << 0x0);
   234  000068  8089               	bsf	3977,0,c	;volatile
   235  00006A  C016  F01A         	movff	??_Isr+17,btemp+3
   236  00006E  C015  F019         	movff	??_Isr+16,btemp+2
   237  000072  C014  F018         	movff	??_Isr+15,btemp+1
   238  000076  C013  F017         	movff	??_Isr+14,btemp
   239  00007A  C012  FFF5         	movff	??_Isr+13,tablat
   240  00007E  C011  FFF8         	movff	??_Isr+12,tblptru
   241  000082  C010  FFF7         	movff	??_Isr+11,tblptrh
   242  000086  C00F  FFF6         	movff	??_Isr+10,tblptrl
   243  00008A  C00E  FFF4         	movff	??_Isr+9,prodh
   244  00008E  C00D  FFF3         	movff	??_Isr+8,prodl
   245  000092  C00C  FFDA         	movff	??_Isr+7,fsr2h
   246  000096  C00B  FFD9         	movff	??_Isr+6,fsr2l
   247  00009A  C00A  FFE2         	movff	??_Isr+5,fsr1h
   248  00009E  C009  FFE1         	movff	??_Isr+4,fsr1l
   249  0000A2  C008  FFEA         	movff	??_Isr+3,fsr0h
   250  0000A6  C007  FFE9         	movff	??_Isr+2,fsr0l
   251  0000AA  C006  FFFB         	movff	??_Isr+1,pclatu
   252  0000AE  C005  FFFA         	movff	??_Isr,pclath
   253  0000B2  9217               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   254  0000B4  0011               	retfie		f
   255  0000B6  FFFF               	dw	65535	; errata NOP
   256  0000B8                     __end_of_Isr:
   257                           	opt stack 0
   258                           pclatu	equ	0xFFB
   259                           pclath	equ	0xFFA
   260                           tblptru	equ	0xFF8
   261                           tblptrh	equ	0xFF7
   262                           tblptrl	equ	0xFF6
   263                           tablat	equ	0xFF5
   264                           prodh	equ	0xFF4
   265                           prodl	equ	0xFF3
   266                           intcon2	equ	0xFF1
   267                           fsr0h	equ	0xFEA
   268                           fsr0l	equ	0xFE9
   269                           fsr1h	equ	0xFE2
   270                           fsr1l	equ	0xFE1
   271                           fsr2h	equ	0xFDA
   272                           fsr2l	equ	0xFD9
   273                           status	equ	0xFD8
   274                           
   275 ;; *************** function _GetInterruptFlag *****************
   276 ;; Defined at:
   277 ;;		line 68 in file "Src/Interrupts.c"
   278 ;; Parameters:    Size  Location     Type
   279 ;;  cnst            2    0[COMRAM] const unsigned int 
   280 ;; Auto vars:     Size  Location     Type
   281 ;;  state           1    3[COMRAM] unsigned char 
   282 ;;  var             1    2[COMRAM] unsigned char 
   283 ;; Return value:  Size  Location     Type
   284 ;;                  2    0[COMRAM] unsigned int 
   285 ;; Registers used:
   286 ;;		wreg, status,2, status,0
   287 ;; Tracked objects:
   288 ;;		On entry : 0/0
   289 ;;		On exit  : 0/0
   290 ;;		Unchanged: 0/0
   291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   292 ;;      Params:         2       0       0       0       0       0       0
   293 ;;      Locals:         2       0       0       0       0       0       0
   294 ;;      Temps:          0       0       0       0       0       0       0
   295 ;;      Totals:         4       0       0       0       0       0       0
   296 ;;Total ram usage:        4 bytes
   297 ;; Hardware stack levels used:    1
   298 ;; This function calls:
   299 ;;		Nothing
   300 ;; This function is called by:
   301 ;;		_Isr
   302 ;; This function uses a non-reentrant model
   303 ;;
   304                           
   305                           	psect	text2
   306  0000BC                     __ptext2:
   307                           	opt stack 0
   308  0000BC                     _GetInterruptFlag:
   309                           	opt stack 0
   310  0000BC  FFFF               	dw	65535	; assembler added errata NOP
   311                           
   312                           ;Interrupts.c: 70: uint8_t var = (uint8_t)(cnst >> 8);
   313                           
   314                           ;incstack = 0
   315  0000BE  5002               	movf	GetInterruptFlag@cnst+1,w,c
   316  0000C0  6E03               	movwf	GetInterruptFlag@var,c
   317                           
   318                           ;Interrupts.c: 71: uint8_t state = (uint8_t)(cnst & 0xFF);
   319  0000C2  C001  F004         	movff	GetInterruptFlag@cnst,GetInterruptFlag@state
   320                           
   321                           ;Interrupts.c: 73: switch(var)
   322  0000C6  D00E               	goto	i2l53
   323  0000C8  FFFF               	dw	65535	; assembler added errata NOP
   324                           
   325                           ;Interrupts.c: 76: state &= INTCON;break;
   326  0000CA  50F2               	movf	intcon,w,c	;volatile
   327  0000CC  D008               	goto	L3
   328  0000CE  FFFF               	dw	65535	; assembler added errata NOP
   329                           
   330                           ;Interrupts.c: 79: state &= INTCON3;break;
   331  0000D0  50F0               	movf	intcon3,w,c	;volatile
   332  0000D2  D005               	goto	L3
   333  0000D4  FFFF               	dw	65535	; assembler added errata NOP
   334                           
   335                           ;Interrupts.c: 82: state &= PIR1;break;
   336  0000D6  509E               	movf	3998,w,c	;volatile
   337  0000D8  D002               	goto	L3
   338  0000DA  FFFF               	dw	65535	; assembler added errata NOP
   339                           
   340                           ;Interrupts.c: 85: state &= PIR2;break;
   341  0000DC  50A1               	movf	4001,w,c	;volatile
   342  0000DE                     L3:
   343  0000DE  FFFF               	dw	65535	; assembler added errata NOP
   344  0000E0  1604               	andwf	GetInterruptFlag@state,f,c
   345                           
   346                           ;Interrupts.c: 87: }
   347                           
   348                           ;Interrupts.c: 86: default:break;
   349  0000E2  D00E               	goto	i2l55
   350  0000E4                     i2l53:
   351  0000E4  FFFF               	dw	65535	; assembler added errata NOP
   352  0000E6  5003               	movf	GetInterruptFlag@var,w,c
   353                           
   354                           ; Switch size 1, requested type "space"
   355                           ; Number of cases is 4, Range of values is 0 to 3
   356                           ; switch strategies available:
   357                           ; Name         Instructions Cycles
   358                           ; simple_byte           13     7 (average)
   359                           ;	Chosen strategy is simple_byte
   360  0000E8  0A00               	xorlw	0	; case 0
   361  0000EA  B4D8               	btfsc	status,2,c
   362  0000EC  D7ED               	goto	i2l54
   363  0000EE  0A01               	xorlw	1	; case 1
   364  0000F0  B4D8               	btfsc	status,2,c
   365  0000F2  D7ED               	goto	i2l56
   366  0000F4  0A03               	xorlw	3	; case 2
   367  0000F6  B4D8               	btfsc	status,2,c
   368  0000F8  D7ED               	goto	i2l57
   369  0000FA  0A01               	xorlw	1	; case 3
   370  0000FC  B4D8               	btfsc	status,2,c
   371  0000FE  D7ED               	goto	i2l58
   372  000100                     i2l55:
   373  000100  FFFF               	dw	65535	; assembler added errata NOP
   374                           
   375                           ;Interrupts.c: 89: return state;
   376  000102  C004  F001         	movff	GetInterruptFlag@state,?_GetInterruptFlag
   377  000106  6A02               	clrf	?_GetInterruptFlag+1,c
   378  000108  0012               	return		;funcret
   379  00010A  FFFF               	dw	65535	; errata NOP
   380  00010C                     __end_of_GetInterruptFlag:
   381                           	opt stack 0
   382  00010C  FFFF               	dw	65535	; assembler added errata NOP
   383                           pclatu	equ	0xFFB
   384                           pclath	equ	0xFFA
   385                           tblptru	equ	0xFF8
   386                           tblptrh	equ	0xFF7
   387                           tblptrl	equ	0xFF6
   388                           tablat	equ	0xFF5
   389                           prodh	equ	0xFF4
   390                           prodl	equ	0xFF3
   391                           intcon	equ	0xFF2
   392                           intcon2	equ	0xFF1
   393                           intcon3	equ	0xFF0
   394                           fsr0h	equ	0xFEA
   395                           fsr0l	equ	0xFE9
   396                           fsr1h	equ	0xFE2
   397                           fsr1l	equ	0xFE1
   398                           fsr2h	equ	0xFDA
   399                           fsr2l	equ	0xFD9
   400                           status	equ	0xFD8
   401                           pclatu	equ	0xFFB
   402                           pclath	equ	0xFFA
   403                           tblptru	equ	0xFF8
   404                           tblptrh	equ	0xFF7
   405                           tblptrl	equ	0xFF6
   406                           tablat	equ	0xFF5
   407                           prodh	equ	0xFF4
   408                           prodl	equ	0xFF3
   409                           intcon	equ	0xFF2
   410                           intcon2	equ	0xFF1
   411                           intcon3	equ	0xFF0
   412                           fsr0h	equ	0xFEA
   413                           fsr0l	equ	0xFE9
   414                           fsr1h	equ	0xFE2
   415                           fsr1l	equ	0xFE1
   416                           fsr2h	equ	0xFDA
   417                           fsr2l	equ	0xFD9
   418                           status	equ	0xFD8
   419                           
   420                           	psect	rparam
   421  0000                     pclatu	equ	0xFFB
   422                           pclath	equ	0xFFA
   423                           tblptru	equ	0xFF8
   424                           tblptrh	equ	0xFF7
   425                           tblptrl	equ	0xFF6
   426                           tablat	equ	0xFF5
   427                           prodh	equ	0xFF4
   428                           prodl	equ	0xFF3
   429                           intcon	equ	0xFF2
   430                           intcon2	equ	0xFF1
   431                           intcon3	equ	0xFF0
   432                           fsr0h	equ	0xFEA
   433                           fsr0l	equ	0xFE9
   434                           fsr1h	equ	0xFE2
   435                           fsr1l	equ	0xFE1
   436                           fsr2h	equ	0xFDA
   437                           fsr2l	equ	0xFD9
   438                           status	equ	0xFD8
   439                           
   440                           	psect	temp
   441  000017                     btemp:
   442                           	opt stack 0
   443  000017                     	ds	1
   444  0000                     int$flags	set	btemp
   445  0000                     wtemp6	set	btemp+1
   446                           pclatu	equ	0xFFB
   447                           pclath	equ	0xFFA
   448                           tblptru	equ	0xFF8
   449                           tblptrh	equ	0xFF7
   450                           tblptrl	equ	0xFF6
   451                           tablat	equ	0xFF5
   452                           prodh	equ	0xFF4
   453                           prodl	equ	0xFF3
   454                           intcon	equ	0xFF2
   455                           intcon2	equ	0xFF1
   456                           intcon3	equ	0xFF0
   457                           fsr0h	equ	0xFEA
   458                           fsr0l	equ	0xFE9
   459                           fsr1h	equ	0xFE2
   460                           fsr1l	equ	0xFE1
   461                           fsr2h	equ	0xFDA
   462                           fsr2l	equ	0xFD9
   463                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     22      22
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Isr in COMRAM

    _Isr->_GetInterruptFlag

Critical Paths under _main in BANK0

    None.

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _Isr                                                 18    18      0     170
                                              4 COMRAM    18    18      0
                   _GetInterruptFlag
 ---------------------------------------------------------------------------------
 (2) _GetInterruptFlag                                     4     2      2     170
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _Isr (ROOT)
   _GetInterruptFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7E     16      16       1       17.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jan 31 22:13:11 2023

                                                           l9 0122  
                                                          _IO 000F80  
                                                 __CFG_BOR$ON 000000  
                                                __CFG_CP0$OFF 000000  
                                                __CFG_CP1$OFF 000000  
                                                __CFG_CP2$OFF 000000  
                                                __CFG_CP3$OFF 000000  
                                                 __CFG_OSC$HS 000000  
                                                __CFG_CPB$OFF 000000  
                                                __CFG_CPD$OFF 000000  
                                                         _Isr 0008  
                                                __CFG_BORV$20 000000  
                                                __CFG_LVP$OFF 000000  
                                                        ?_Isr 0001  
                                                __CFG_WDT$OFF 000000  
                                                        _IPR1 000F9F  
                                                        _IPR2 000FA2  
                                                        _PIE1 000F9D  
                                                        _PIE2 000FA0  
                                                        _PIR1 000F9E  
                                                        _PIR2 000FA1  
                                                        i2l53 00E4  
                                                        i2l54 00C8  
                                                        i2l55 0100  
                                                        i2l56 00CE  
                                                        i2l57 00D4  
                                                        i2l58 00DA  
                                                        _main 011C  
                                                        fsr0h 000FEA  
                                                        fsr1h 000FE2  
                                                        fsr2h 000FDA  
                                                        fsr0l 000FE9  
                                                        fsr1l 000FE1  
                                                        fsr2l 000FD9  
                                                        btemp 0017  
                                                        prodh 000FF4  
                                                        prodl 000FF3  
                                                        start 00B8  
                                                ___param_bank 000000  
                                                       ??_Isr 0005  
                                               __CFG_OSCS$OFF 000000  
                                                       ?_main 0001  
                                               __CFG_PWRT$OFF 000000  
                                               __CFG_WRT0$OFF 000000  
                                               __CFG_WRT1$OFF 000000  
                                               __CFG_WRT2$OFF 000000  
                                               __CFG_WRT3$OFF 000000  
                                              __CFG_EBTR0$OFF 000000  
                                              __CFG_EBTR1$OFF 000000  
                                              __CFG_EBTR2$OFF 000000  
                                              __CFG_EBTR3$OFF 000000  
                                               __CFG_STVR$OFF 000000  
                                               __CFG_WRTB$OFF 000000  
                                               __CFG_WRTC$OFF 000000  
                                               __CFG_WRTD$OFF 000000  
                                              __CFG_EBTRB$OFF 000000  
                                                       pclath 000FFA  
                                                       tablat 000FF5  
                                                       status 000FD8  
                                                       wtemp6 0018  
                                    __end_of_GetInterruptFlag 010C  
                                             __initialization 010E  
                                                __end_of_main 0126  
                                                      ??_main 0017  
                                               __activetblptr 000002  
                                             __CFG_CCP2MUX$ON 000000  
                                                      _INTCON 000FF2  
                                              __CFG_WDTPS$128 000000  
                                                      tblptrh 000FF7  
                                                      tblptrl 000FF6  
                                                      tblptru 000FF8  
                                                  __accesstop 0080  
                                     __end_of__initialization 010E  
                                               ___rparam_used 000001  
                                              __pcstackCOMRAM 0001  
                                                     _INTCON2 000FF1  
                                                     _INTCON3 000FF0  
                                           ?_GetInterruptFlag 0001  
                                                     __Hparam 0000  
                                                     __Lparam 0000  
                                          ??_GetInterruptFlag 0003  
                                                     __pcinit 010E  
                                                     __ramtop 0600  
                                                     __ptext0 011C  
                                                     __ptext2 00BC  
                                                __size_of_Isr 00B0  
                                        end_of_initialization 010E  
                                               __Lmediumconst 0000  
                                         GetInterruptFlag@var 0003  
                                         start_initialization 010E  
                                                 __end_of_Isr 00B8  
                                                   __pintcode 0008  
                                   __size_of_GetInterruptFlag 0050  
                                                    __Hrparam 0000  
                                                    __Lrparam 0000  
                                               __size_of_main 000A  
                                                    int$flags 0017  
                                            _GetInterruptFlag 00BC  
                                                    intlevel2 0126  
                                        GetInterruptFlag@cnst 0001  
                                       GetInterruptFlag@state 0004  
